#  **************************************************************************  #
#                                                                              #
#                                                       :::    :::    :::      #
#    Problem Number: 6198                              :+:    :+:      :+:     #
#                                                     +:+    +:+        +:+    #
#    By: lsw2207 <boj.kr/u/lsw2207>                  +#+    +#+          +#+   #
#                                                   +#+      +#+        +#+    #
#    https://boj.kr/6198                           #+#        #+#      #+#     #
#    Solved: 2025/09/13 21:36:05 by lsw2207       ###          ###   ##.kr     #
#                                                                              #
#  **************************************************************************  #

"""
    - 문제: 
        - 각 빌딩은 오른쪽의 빌딩만 확인가능
        - 자신보다 높거나 같은 높이를 만나면 더이상 볼 수 없음
        - 각 빌딩에서 볼 수 있는 빌딩의 수의 총합을 구해라
        - N = 80,000 
    - IDEA:
        - 결국 탑 문제와 풀이가 같음
        - 맨 오른쪽 탑부터 확인, 
        - 스택의ㅏ 구조는 [자신의 빌딩 값, 자신이 볼수 있는 나보다 낮은 탑]
        - 스택이 비어 있으면, 0을 더하고 스택에 추가. 
        - 스택의 마지막 원소가 현재 탑보다 작으면 계속 큰게 나올때까지 pop하고 현재까지의 카운트를 기록
            - 0이면 +1, 아니면 +cnt
        - 스택의 마지막 원소가 자신보다 크면, 0을 기록, 스택에 추가
"""

N = int(input())
buildings = [int(input()) for _ in range(N)]

stack = []
result = 0

while buildings:
    target = buildings.pop() 
    
    cnt = 0 

    while stack and stack[-1][0] < target:
        if stack[-1][1] == 0:
            cnt += 1
        else:
            cnt += stack[-1][1] + 1 # 나보다 작은애가 보는건 나도 다 볼 수 있어

        stack.pop()

    result += cnt
    stack.append((target, cnt))
    
print(result)

